import pandas as pd
from bs4 import BeautifulSoup
from sqlalchemy import create_engine
from sqlalchemy.engine import URL
connection_string = ('Driver={sql server};'
'Database=master;'
'Trusted_Connection=true;')
connection_url = URL.create(
    "mssql+pyodbc",
    query={"odbc_connect": connection_string}
)
engine = create_engine(connection_url)
conn = engine.connect().execution_options(
    stream_results=True)

counter=0

with open("C:/Users/neyma/test/ss.xml") as fp:
    soup = BeautifulSoup(fp, 'xml')
data = []
for Event in soup.select('Event'):
    counter+=1
    data.append({
        'counter': counter,
        'EventID': Event.select_one('EventID').text if Event.select_one('EventID') else None,
        'Task': Event.select_one('Task').text if Event.select_one('Task') else None,
        'EventRecordID': Event.select_one('EventRecordID').text if Event.select_one('EventRecordID') else None,
        'Channel': Event.select_one('Channel').text if Event.select_one('Channel') else None,
        'Computer': Event.select_one('Computer').text if Event.select_one('Computer') else None,
        'TargetUserName': e.text if (e := Event.select_one(('Data[Name="TargetUserName"]'))) else None,
        'TargetDomainName': e.text if (e := Event.select_one(('Data[Name="TargetDomainName"]'))) else None,
        'TargetSid': e.text if (e := Event.select_one(('Data[Name="TargetSid"]'))) else None,
        'ObjectClass': e.text if (e := Event.select_one(('Data[Name="ObjectClass"]'))) else None,
        'OpCorrelationID': e.text if (e := Event.select_one(('Data[Name="OpCorrelationID"]'))) else None,
        'SubjectUserSid': e.text if (e := Event.select_one(('Data[Name="SubjectUserSid"]'))) else None,
        'SubjectUserName': e.text if (e := Event.select_one(('Data[Name="SubjectUserName"]'))) else None,
        'SubjectDomainName': e.text if (e := Event.select_one(('Data[Name="SubjectDomainName"]'))) else None,
        'SubjectLogonId': e.text if (e := Event.select_one(('Data[Name="SubjectLogonId"]'))) else None,
        'DSName': e.text if (e := Event.select_one(('Data[Name="DSName"]'))) else None,
        'DSType': e.text if (e := Event.select_one(('Data[Name="DSType"]'))) else None,
        'ObjectDN': e.text if (e := Event.select_one(('Data[Name="ObjectDN"]'))) else None,
        'ObjectGUID': e.text if (e := Event.select_one(('Data[Name="ObjectGUID"]'))) else None,
        'AttributeLDAPDisplayName': e.text if (e := Event.select_one(('Data[Name="AttributeLDAPDisplayName"]'))) else None,
        'AttributeSyntaxOID': e.text if (e := Event.select_one(('Data[Name="AttributeSyntaxOID"]'))) else None,
        'AttributeValue': e.text if (e := Event.select_one(('Data[Name="AttributeValue"]'))) else None,
        'OperationType': e.text if (e := Event.select_one(('Data[Name="OperationType"]'))) else None,
    })

df = pd.DataFrame(data)
engine.execute('''
CREATE TABLE try4(
counter int,
EventID int,
Task int,
EventRecordID int,
Channel nvarchar(50),
computer nvarchar(50),
TargetUserName nvarchar(max),
TargetDomainName nvarchar(max),
TargetSid nvarchar(max),
ObjectClass nvarchar(max),
OpCorrelationID nvarchar(max),
SubjectUserSid nvarchar(max),
SubjectUserName nvarchar(max),
SubjectDomainName nvarchar(max),
SubjectLogonId nvarchar(max),
DSName nvarchar(max),
DSType nvarchar(max),
ObjectDN nvarchar(max),
ObjectGUID nvarchar (max),
AttributeLDAPDisplayName nvarchar(max),
AttributeSyntaxOID nvarchar(max),
AttributeValue nvarchar(max),
OperationType nvarchar(max),
)
                                   ''')
df.to_sql('try4', conn, if_exists='replace', index=False, chunksize=1)
for row in engine.execute('''SELECT * FROM try4''').fetchall():
    print("row inserted successfully")
